---
import BaseLayout from "../layouts/BaseLayout.astro";
import Header from "../components/Header.astro";
import Article from "../components/Article.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";

import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const allPosts = (
    await getCollection("blog", ({ data }) => {
      return data.draft !== true;
    })
  ).sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

  const uniqueTags = [
    ...new Set(allPosts.map((post) => post.data.tags).flat()),
  ];

  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags.includes(tag)
    );

    const amountOfPosts = filteredPosts.length;

    return {
      params: { tag },
      props: { posts: filteredPosts, tags: uniqueTags, amount: amountOfPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;
const { tags } = Astro.props;
const { amount } = Astro.props;

// const tagUppercased =
//   tag.charAt(0).toUpperCase() + tag.slice(1).replace(/-/g, " ");

// title case tag
const tagUppercased = tag
  .split("-")
  .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
  .join(" ");

const pathname = new URL(Astro.request.url).pathname;
const currentPath = pathname.slice(1); // remove the first "/"
---

<BaseLayout title={SITE_TITLE} description={SITE_DESCRIPTION}>
  <Header tags={tags} currentPath={currentPath} amount={amount} />
  <main class="main">
    {
      /*
    <div class="intro">
      <h2>
        {tagUppercased}
      </h2>
      <p>{amount}&nbsp;{amount === 1 ? "font family" : "font families"}</p>
      <p>
        {amount}&nbsp;{tagUppercased}&nbsp;{amount === 1 ? "font" : "fonts"}
      </p>
      <p>{amount}&nbsp;{amount === 1 ? "font" : "fonts"}</p>
    </div>
     */
    }
    <div class="items">
      {
        posts.map((post) => (
          <Article
            slug={post.slug}
            title={post.data.title}
            foundry={post.data.foundry}
            variable={post.data.variable}
            date={post.data.pubDate}
            staticFont={post.data.staticFont}
            weights={post.data.weights}
            italic={post.data.italic}
          />
        ))
      }
    </div>
  </main>
</BaseLayout>
